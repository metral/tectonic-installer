
// The e-mail address used to login as the admin user to the Tectonic Console.
// 
// Note: This field MUST be set manually prior to creating the cluster.
tectonic_admin_email = ""

// The bcrypt hash of admin user password to login to the Tectonic Console.
// Use the bcrypt-hash tool (https://github.com/coreos/bcrypt-tool/releases/tag/v1.0.0) to generate it.
// 
// Note: This field MUST be set manually prior to creating the cluster.
tectonic_admin_password_hash = ""

// If set to true, create an Azure DNS zone
tectonic_azure_create_dns_zone = true

// If set to true, all required rules will be created for all Network
// Security Groups. Otherwise, no rules are added to the NSGs and are expected
// to already exist.
tectonic_azure_create_nsg_rules = true

// 
tectonic_azure_dns_resource_group = "tectonic-dns-group"

// (optional) The IP address of the external DNS server to use. This is configured
// as the resolver for the proxy used in front of the Tectonic Console, and it is also used
// during the DNS registration of each individual node in the cluster at creation.
// tectonic_azure_dns_server = ""

// Storage account type for the etcd node(s). Example: Premium_LRS.
tectonic_azure_etcd_storage_account_type = "Premium_LRS"

// Instance size for the etcd node(s). Example: Standard_DS2_v2.
tectonic_azure_etcd_vm_size = "Standard_DS2_v2"

// (optional) Subnet ID within an existing VNet to deploy master nodes into.
// Required to use an existing VNet.
// 
// Example: the subnet ID starts with `"/subscriptions/{subscriptionId}"` or `"/providers/{resourceProviderNamespace}"`.
// tectonic_azure_external_master_subnet_id = ""

// (optional) The name of the external Network Security Group used for the
// Tectonic Console and Kubernetes API Server. This depends on
// `tectonic_azure_external_resource_group` to also be specified.
// tectonic_azure_external_nsg_api = ""

// (optional) The name of the external Network Security Group used for etcd. This
// depends on `tectonic_azure_external_resource_group` to also be specified.
// tectonic_azure_external_nsg_etcd = ""

// (optional) The name of the external Network Security Group used for masters. This
// depends on `tectonic_azure_external_resource_group` to also be specified.
// tectonic_azure_external_nsg_master = ""

// (optional) The name of the external Network Security Group used for workers. This
// depends on `tectonic_azure_external_resource_group` to also be specified.
// tectonic_azure_external_nsg_worker = ""

// (optional) The name of the resource group of the external Network Security
// Group used. This is required if specifying `tectonic_external_nsg_etcd`,
// `tectonic_external_nsg_master`, and/or `tectonic_external_nsg_worker`,
// tectonic_azure_external_resource_group = ""

// Pre-existing resource group to use as parent for cluster resources.
tectonic_azure_external_rsg_name = ""

// ID of an existing Virtual Network to launch nodes into. Example: VNet1. Leave blank to create a new Virtual Network.
tectonic_azure_external_vnet_id = ""

// Pre-existing virtual network to create cluster into.
tectonic_azure_external_vnet_name = ""

// (optional) Subnet ID within an existing VNet to deploy worker nodes into.
// Required to use an existing VNet.
// 
// Example: the subnet ID starts with `"/subscriptions/{subscriptionId}"` or `"/providers/{resourceProviderNamespace}"`.
// tectonic_azure_external_worker_subnet_id = ""

// (optional) Specifies an image map with the following keys: `publisher`, `offer`, `sku`, `version`
// tectonic_azure_image_reference = ""

// 
tectonic_azure_location = ""

// Storage account type for the master node(s). Example: Premium_LRS.
tectonic_azure_master_storage_account_type = "Premium_LRS"

// Instance size for the master node(s). Example: Standard_DS2_v2.
tectonic_azure_master_vm_size = "Standard_DS2_v2"

// 
tectonic_azure_ssh_key = ""

// (optional) Network (external) to allow SSH access from. Maps to `source_address_prefix` in Azure.
// Defaults to `*`. Can be external to Azure environment.
// Allowed values: [network CIDR (i.e., 10.0.0.0/16) | `VirtualNetwork` | `Internet` | `*` ]
// tectonic_azure_ssh_network_external = "*"

// Network (internal) to allow SSH access from. Maps to `source_address_prefix` in Azure.
// Defaults to `VirtualNetwork`. Should be internal to Azure environment.
// Allowed values: [network CIDR (i.e., 10.0.0.0/16) | `VirtualNetwork` | `Internet` | `*` ]
tectonic_azure_ssh_network_internal = "VirtualNetwork"

// (optional) If set to true, assemble the FQDN from the configuration. Otherwise, use the FQDN set up by Azure.
// tectonic_azure_use_custom_fqdn = false

// Block of IP addresses used by the Resource Group. This should not overlap with any other networks, such as a private datacenter connected via ExpressRoute.
tectonic_azure_vnet_cidr_block = "10.0.0.0/16"

// Storage account type for the worker node(s). Example: Premium_LRS.
tectonic_azure_worker_storage_account_type = "Premium_LRS"

// Instance size for the worker node(s). Example: Standard_DS2_v2.
tectonic_azure_worker_vm_size = "Standard_DS2_v2"

// The base DNS domain of the cluster.
// 
// Example: `openstack.dev.coreos.systems`.
// 
// Note: This field MUST be set manually prior to creating the cluster.
// This applies only to cloud platforms.
tectonic_base_domain = ""

// (optional) The content of the PEM-encoded CA certificate, used to generate Tectonic Console's server certificate.
// If left blank, a CA certificate will be automatically generated.
// tectonic_ca_cert = ""

// (optional) The content of the PEM-encoded CA key, used to generate Tectonic Console's server certificate.
// This field is mandatory if `tectonic_ca_cert` is set.
// tectonic_ca_key = ""

// (optional) The algorithm used to generate tectonic_ca_key.
// The default value is currently recommend.
// This field is mandatory if `tectonic_ca_cert` is set.
// tectonic_ca_key_alg = "RSA"

// The Container Linux update channel.
// 
// Examples: `stable`, `beta`, `alpha`
tectonic_cl_channel = "stable"

// This declares the IP range to assign Kubernetes pod IPs in CIDR notation.
tectonic_cluster_cidr = "10.2.0.0/16"

// The name of the cluster.
// If used in a cloud-environment, this will be prepended to `tectonic_base_domain` resulting in the URL to the Tectonic console.
// 
// Note: This field MUST be set manually prior to creating the cluster.
// Warning: Special characters in the name like '.' may cause errors on OpenStack platforms due to resource name constraints.
tectonic_cluster_name = ""

// (optional) Defines a prefix for cluster names
// 
// WARNING: This prefix should be a short, strictly alphanumeric value.
// Special characters will cause errors due to certain resource name constraints.
// tectonic_cluster_prefix = ""

// (optional) The path of the file containing the CA certificate for TLS communication with etcd.
// 
// Note: This works only when used in conjunction with an external etcd cluster.
// If set, the variables `tectonic_etcd_servers`, `tectonic_etcd_client_cert_path`, and `tectonic_etcd_client_key_path` must also be set.
// tectonic_etcd_ca_cert_path = ""

// (optional) The path of the file containing the client certificate for TLS communication with etcd.
// 
// Note: This works only when used in conjunction with an external etcd cluster.
// If set, the variables `tectonic_etcd_servers`, `tectonic_etcd_ca_cert_path`, and `tectonic_etcd_client_key_path` must also be set.
// tectonic_etcd_client_cert_path = ""

// (optional) The path of the file containing the client key for TLS communication with etcd.
// 
// Note: This works only when used in conjunction with an external etcd cluster.
// If set, the variables `tectonic_etcd_servers`, `tectonic_etcd_ca_cert_path`, and `tectonic_etcd_client_cert_path` must also be set.
// tectonic_etcd_client_key_path = ""

// The number of etcd nodes to be created.
// If set to zero, the count of etcd nodes will be determined automatically.
// 
// Note: This is currently only supported on AWS.
tectonic_etcd_count = "0"

// (optional) List of external etcd v3 servers to connect with (hostnames/IPs only).
// Needs to be set if using an external etcd cluster.
// 
// Example: `["etcd1", "etcd2", "etcd3"]`
// tectonic_etcd_servers = ""

// A set of paths that point to tls assets that have been pregenerated for the cluster. You can provide as many or as few certs as desired. The certificate files can include an intermediate certificate if necessary.
// ca_crt_path:         The file location of a PEM-encoded CA certificate, used to generate the certificates that we will use to secure the tls enabled endpoints in tectonic.
// ca_key_path:         The file location of a PEM-encoded CA key, used to sign all of the generated certificates. If left blank one will be generated.
// ca_key_alg:          The algorithm used to generate the ca_key. The default value is recommended. This field is mandatory if `ca_key` is set.
// ingress_crt_path:    The file location of the certificate that will be used to secure the ingress controller in front of the console and identity services.
//                      This certificate should have the CN and Subject Alternate Name set. See RFC2818 for details
// ingress_key_path:    The file location of the key that will be used to secure the ingress controller in front of the console and identity services.
// apiserver_cert_path: The file location of the certificate that will be used to secure communication with the kube apiserver.
//                      This certificate should have the following Subject Alternate Names set: "The common name used to address the api server", "kubernetes", "kubernetes.default",¬"kubernetes.default.svc",¬"kubernetes.default.svc.cluster.local" and a SAN IP of 10.3.0.1
// apiserver_key_path:  The file location of the key that will be used to secure communication with the kube apiserver.
tectonic_existing_certs = ""

// If set to true, experimental Tectonic assets are being deployed.
tectonic_experimental = false

// The path to the tectonic licence file.
// 
// Note: This field MUST be set manually prior to creating the cluster unless `tectonic_vanilla_k8s` is set to `true`.
tectonic_license_path = ""

// The number of master nodes to be created.
// This applies only to cloud platforms.
tectonic_master_count = "1"

// The path the pull secret file in JSON format.
// 
// Note: This field MUST be set manually prior to creating the cluster unless `tectonic_vanilla_k8s` is set to `true`.
tectonic_pull_secret_path = ""

// This declares the IP range to assign Kubernetes service cluster IPs in CIDR notation. The maximum size of this IP range is /12
tectonic_service_cidr = "10.3.0.0/16"

// If set to true, a vanilla Kubernetes cluster will be deployed, omitting any Tectonic assets.
tectonic_vanilla_k8s = false

// The number of worker nodes to be created.
// This applies only to cloud platforms.
tectonic_worker_count = "3"
